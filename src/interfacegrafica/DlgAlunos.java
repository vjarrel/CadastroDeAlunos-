/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package interfacegrafica;

import cadastroalunos.CadastroAluno;
import controlaaluno.ControlaAluno;
import construtoraluno.Aluno;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author JuanP
 */
public class DlgAlunos extends javax.swing.JDialog {

    /**
     * Creates new form DlgAlunos
     */
    
    ControlaAluno ca;
    
    public DlgAlunos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public DlgAlunos(java.awt.Frame parent, boolean modal, ControlaAluno ca) {
        super(parent, modal);
        this.ca = ca;
        initComponents();
        exibirInformacoes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSair = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAlunos = new javax.swing.JTable();
        btnTerceiroElemento = new javax.swing.JButton();
        btnPrimeiroEUltimo = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        btnIdade = new javax.swing.JButton();
        btnDadosCSV = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        tblAlunos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nome", "Matricula", "D. De Nascimento", "Idade", "CPF", "Telefone"
            }
        ));
        jScrollPane1.setViewportView(tblAlunos);
        tblAlunos.getAccessibleContext().setAccessibleName("");

        btnTerceiroElemento.setText("Terceiro Elemento");
        btnTerceiroElemento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTerceiroElementoActionPerformed(evt);
            }
        });

        btnPrimeiroEUltimo.setText("Primeiro e Ultimo");
        btnPrimeiroEUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimeiroEUltimoActionPerformed(evt);
            }
        });

        btnRemover.setText("Remover o Ultimo");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        btnIdade.setText("Verifica a idade");
        btnIdade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIdadeActionPerformed(evt);
            }
        });

        btnDadosCSV.setText("Salvar Dados em CSV");
        btnDadosCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDadosCSVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnPrimeiroEUltimo)
                        .addGap(18, 18, 18)
                        .addComponent(btnIdade, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDadosCSV)
                        .addGap(18, 18, 18)
                        .addComponent(btnSair))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnTerceiroElemento)
                                .addGap(18, 18, 18)
                                .addComponent(btnRemover))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 60, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTerceiroElemento)
                    .addComponent(btnRemover))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSair)
                            .addComponent(btnDadosCSV)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnPrimeiroEUltimo)
                            .addComponent(btnIdade))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exibirInformacoes(){
    
        ArrayList<Aluno> alunos = ca.retornarDados(); 
        
        for(int i = 0; i < alunos.size(); i++){
            
            tblAlunos.setValueAt("", i, 0);
            tblAlunos.setValueAt("", i, 1);
            tblAlunos.setValueAt("", i, 2);
            tblAlunos.setValueAt("", i, 3);
            tblAlunos.setValueAt("", i, 4);
            tblAlunos.setValueAt("", i, 5);
            
        }
        
        for(int i = 0; i < alunos.size(); i++){
            
            SimpleDateFormat dataFormatada = new SimpleDateFormat("dd/MM/yyyy"); 
            
            tblAlunos.setValueAt(alunos.get(i).getNome(), i, 0);
            tblAlunos.setValueAt(alunos.get(i).getMatricula(), i, 1);
            tblAlunos.setValueAt(dataFormatada.format(alunos.get(i).getDataNasc()), i, 2);
            tblAlunos.setValueAt(alunos.get(i).getIdade(), i, 3);
            tblAlunos.setValueAt(alunos.get(i).getCpf(), i, 4);
            tblAlunos.setValueAt(alunos.get(i).getTelefone(), i, 5);
            
        }
        
    }
    
    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnTerceiroElementoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTerceiroElementoActionPerformed
        ArrayList<Aluno> alunos = ca.retornarDados();
        
        int qtLista = alunos.size();
        
        StringBuilder terceiroElemento = new StringBuilder();

        try {
            if (alunos.get(2) != null) {
                
                SimpleDateFormat dataFormatada = new SimpleDateFormat("dd/MM/yyyy"); 
                
                terceiroElemento
                        .append("Nome: ").append(alunos.get(2).getNome())
                        .append("\nMatricula: ").append(alunos.get(2).getMatricula())
                        .append("\nData de Nasc.: ").append(dataFormatada.format(alunos.get(2).getDataNasc()))
                        .append("\nIdade: ").append(alunos.get(2).getIdade())
                        .append("\nTelefone: ").append(alunos.get(2).getTelefone())
                        .append("\nCPF: ").append(alunos.get(2).getCpf())
                        .append("\n\nQuantidade de elementos na lista: ").append(qtLista);
                JOptionPane.showMessageDialog(null, terceiroElemento);
            }
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Não existe elemento na terceira posição!");
        }
    }//GEN-LAST:event_btnTerceiroElementoActionPerformed

    private void btnPrimeiroEUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimeiroEUltimoActionPerformed
        ArrayList<Aluno> alunos = ca.retornarDados();
        
        StringBuilder primeiroUltimoElemento = new StringBuilder();
        
        try {
            if (alunos.size() >= 2) {
                SimpleDateFormat dataFormatada = new SimpleDateFormat("dd/MM/yyyy"); 
                
                int ultimoElemento = alunos.size() - 1;
                
                primeiroUltimoElemento
                        .append("Primeiro Elemento:\nNome: ").append(alunos.get(0).getNome())
                        .append("\nMatricula: ").append(alunos.get(0).getMatricula())
                        .append("\nData de Nasc.: ").append(dataFormatada.format(alunos.get(0).getDataNasc()))
                        .append("\nIdade: ").append(alunos.get(0).getIdade())
                        .append("\nTelefone: ").append(alunos.get(0).getTelefone())
                        .append("\nCPF: ").append(alunos.get(0).getCpf())
                        .append("\n\nUltimo Elemento:\nNome: ").append(alunos.get(ultimoElemento).getNome())
                        .append("\nMatricula: ").append(alunos.get(ultimoElemento).getMatricula())
                        .append("\nData de Nasc.: ").append(dataFormatada.format(alunos.get(ultimoElemento).getDataNasc()))
                        .append("\nIdade: ").append(alunos.get(ultimoElemento).getIdade())
                        .append("\nTelefone: ").append(alunos.get(ultimoElemento).getTelefone())
                        .append("\nCPF: ").append(alunos.get(ultimoElemento).getCpf());
                        
                JOptionPane.showMessageDialog(null, primeiroUltimoElemento);
            }else{
                
                SimpleDateFormat dataFormatada = new SimpleDateFormat("dd/MM/yyyy"); 
                
                primeiroUltimoElemento
                        .append("Nome: ").append(alunos.get(0).getNome())
                        .append("\nMatricula: ").append(alunos.get(0).getMatricula())
                        .append("\nData de Nasc.: ").append(dataFormatada.format(alunos.get(0).getDataNasc()))
                        .append("\nIdade: ").append(alunos.get(0).getIdade())
                        .append("\nTelefone: ").append(alunos.get(0).getTelefone())
                        .append("\nCPF: ").append(alunos.get(0).getCpf());
                JOptionPane.showMessageDialog(null, primeiroUltimoElemento);
            }
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Não existe elementos na lista!");
        }
    }//GEN-LAST:event_btnPrimeiroEUltimoActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        ArrayList<Aluno> alunos = ca.retornarDados();
        
        if(alunos.isEmpty()) {
            JOptionPane.showMessageDialog(null,"A lista esta vazia");
        }else{
            int ultimoElemento = alunos.size()-1;
            alunos.remove(ultimoElemento);
            JOptionPane.showMessageDialog(null, "O ultimo elemento foi removido, feche a aba da lista e abra novamente");
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnIdadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIdadeActionPerformed
        ArrayList<Aluno> alunos = ca.retornarDados();
        
        StringBuilder maiorMenor = new StringBuilder();
        
        int maior = 0, menor = 0, maiorPos=0, menorPos=0;
        
        for(int i=0; i<alunos.size();i++){
            
            if(i==0){
                int idadeInt = Integer.parseInt(alunos.get(i).getIdade());
                maior = idadeInt;
                menor = idadeInt;
                maiorPos = i;
                menorPos = i;
            }else{
                int idadeInt = Integer.parseInt(alunos.get(i).getIdade());
                if(maior<idadeInt){
                    maior = idadeInt;
                    maiorPos = i;
                }
                if(menor>idadeInt){
                    menor = idadeInt;
                    menorPos = i;
                }
            }
        }
        
        SimpleDateFormat dataFormatada = new SimpleDateFormat("dd/MM/yyyy"); 
        
        maiorMenor
                        .append("Mais novo:\nNome: ").append(alunos.get(menorPos).getNome())
                        .append("\nMatricula: ").append(alunos.get(menorPos).getMatricula())
                        .append("\nData de Nasc.: ").append(dataFormatada.format(alunos.get(menorPos).getDataNasc()))
                        .append("\nIdade: ").append(alunos.get(menorPos).getIdade())
                        .append("\nTelefone: ").append(alunos.get(menorPos).getTelefone())
                        .append("\nCPF: ").append(alunos.get(menorPos).getCpf())
                        .append("\n\nMais velho:\nNome: ").append(alunos.get(maiorPos).getNome())
                        .append("\nMatricula: ").append(alunos.get(maiorPos).getMatricula())
                        .append("\nData de Nasc.: ").append(dataFormatada.format(alunos.get(maiorPos).getDataNasc()))
                        .append("\nIdade: ").append(alunos.get(maiorPos).getIdade())
                        .append("\nTelefone: ").append(alunos.get(maiorPos).getTelefone())
                        .append("\nCPF: ").append(alunos.get(maiorPos).getCpf());
                        
                JOptionPane.showMessageDialog(null, maiorMenor);
        
        
    }//GEN-LAST:event_btnIdadeActionPerformed

    private void btnDadosCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDadosCSVActionPerformed
       ArrayList<Aluno> alunos = ca.retornarDados();
        
        File file = new File("ListagemAlunos.csv");
        FileWriter fw = null;
        SimpleDateFormat dataFormatada = new SimpleDateFormat("dd/MM/yyyy"); 
        
        try {
            fw = new FileWriter(file);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao salvar os arquivos no formato csv");
        }
        
        BufferedWriter bw = new BufferedWriter(fw);
        
        for(int i = 0; i < alunos.size();i++){
            try {
                bw.write(alunos.get(i).getMatricula()+", ");
                bw.write(alunos.get(i).getNome()+"   ");
                bw.write(alunos.get(i).getIdade()+", ");
                bw.write(dataFormatada.format(alunos.get(i).getDataNasc())+", ");
                bw.write(alunos.get(i).getTelefone()+", ");
                bw.write(alunos.get(i).getCpf()+" ");
                
                bw.newLine();
            } catch (IOException ex) {
               JOptionPane.showMessageDialog(null, "Erro ao salvar os arquivos no formato csv");
            }
        }
        
        try {
            bw.close();
        } catch (IOException ex) {
            //
        }
        
        try {
            fw.close();
        } catch (IOException ex) {
            //
        }
    }//GEN-LAST:event_btnDadosCSVActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgAlunos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgAlunos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgAlunos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgAlunos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgAlunos dialog = new DlgAlunos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDadosCSV;
    private javax.swing.JButton btnIdade;
    private javax.swing.JButton btnPrimeiroEUltimo;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnTerceiroElemento;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAlunos;
    // End of variables declaration//GEN-END:variables
}
